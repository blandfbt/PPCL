
{
	"COMMENT":{
			"function": "Want to comment a JSON file?  Make a key that won't be used",
			"description": "So, there are a bunch of NOT YET DEFINED entries in here.  I wanted to get them written down so there is a guide to work from.  The pop ups may inspire others to contribute.",
			"example": "you can write in this file, and commit it to the repo.  Feel free to have fun!"
		},

	"ACT": {
			"function": "ACT(Line 1,...,Line 16)",
			"description": "Enables from 1 to 16 lines of PPCL code so they can be examined and executed.",
			"example": "100 IF (TIME.GT.8:00.AND.TIME.LT.17:00) THEN ACT(120) ELSE DEACT(120)"
		},

	"ADAPTM": {
			"function": "ADAPTM(pv,cv,sp,matctl,mam,st,kc,tcd,tch,tcc,her,dbr,der,err)",
			"description": "The ADAPTM statement performs an adaptive closed-loop control and is specifically designed for use with supply air temperature control, in which two or three output devices, such as heating and cooling coils and dampers are controlled in sequence without overlap.",
			"example": "2000 C ADAPTM CONTROL LOOP STATISTICS (LOGICAL<br />2002 C FIRMWARE)<br />2004 C DIRECT CONTROL LOOP<br />2006 C INPUT = %X%SAT<br />2008 C Output = %X%VRT<br />2010 C SETPOINT = %X%SAS<br />2012 C  MA TEMP CNTRL OUTPUT = $MATCTL<br />2014 C MA MIN POSITION = %X%MAM<br />2016 C SAMPLE TIME = 5 SECONDS<br />2018 C GAIN = %X%KC1<br />2020 C DAMPER TIME CONSTANT = %X%TD1<br />2022 C HEATING TIME CONSTANT = %X%TH1<br />2024 C COOLING TIME CONSTANT = %X%TC1<br />2026 C HEATING END OF RANGE = 45.0<br />2028 C DAMPER BEGIN RANGE = 50.0<br />2030 C DAMPER END RANGE = 65.0<br />2032 C ERROR REPORT POINT = %X%ER1<br />2034ADAPTM (%X%SAT, %X%VRT,%X%SAS,$MATCTL,%X%MAM, 5, %X%KC1, %X%TD1, %X%TH1, %X%TCI, 45.0, 50.0, 65.0, %X%ER1)<br />2036 C  HEATING COIL SIGNAL<br />2038 TABLE (%X%VRT, %X%HCO, 0, 100, 45, 0)<br />2040 C DAMPER RAMP<br />2042 TABLE ($MADRMP, $MADRCT, 0,0,10,%X%MAM,180,100)<br />2044 C  DAMPER CONTROL SIGNAL<br />2046 TABLE (%X%VRT, $MADCTL, 50,%X%MAM, 65,100)<br />2048 C  MIXED AIR TEMPERATURE CONTROL LOOP<br />2050 IF ($MADRCT.LT.$MATCTL)THEN GOTO 2056<br />2052 ADAPTS (%X%MAT, $MATCTL, %X%MLS, 10, %X%KC2, %X%TM2, 0, 30.0, 130.0, 0.0, 100.0, 0.0, 0.0, %X%ER2)<br />2054 C ECONOMIZER CONTROL<br />2056&nbspIF (%X%ECM .EQ. OFF) THEN GOTO 2072<br />2058 C COOLING COIL SIGNAL (ECON=ON)<br />2060 TABLE (%X%VRT, %X%CCO, 65, 0, 100, 100)<br />2062 C FINAL DAMPER SIGNAL<br />2064 MIN (%X%MAO, $MADRCT, $MADCTL, $MATCTL)<br />2068 GOTO 2074<br />2070 C COOLING COIL SIGNAL<br />2072 TABLE (%X%VRT, %X%CCO, 55, 0, 100, 100)<br />2074 ..."
		},

	"ADAPTS": {
			"function": "ADAPTS(pv,cv,sp,st,kc,tc,ra,llpv,hlpv,llcv,hlcv,edb,npv,err)",
			"description": "The ADAPTS statement performs adaptive closed loop control. ADAPTS is a general purpose, single input, single output controller for both linear and non-linear processes. Example applications for ADAPTS statements are mixed air temperature, static pressure, return air flow, and humidity control.",
			"example": "2000 C ADAPTS CONTROL LOOP STATISTICS (LOGICAL<br />2002 C FIRMWARE) STATIC PRESSURE CONTROL<br />2004 C DIRECT CONTROL LOOP<br />2006 C INPUT = %X%SSP<br />2008 C Output = %X%LP1<br />2010 C SETPOINT = %X%SSS<br />2012 C  SAMPLE TIME = 1 SECOND<br />2014 C GAIN = %X%KC<br />2016 C TIME CONSTANT = %X%TC<br />2018 C REVERSE ACTING FLAG = 1<br />2020 C LOW LIMIT OF INPUT = -0.1<br />2022 C HIGH LIMIT OF INPUT = 5.0<br />2024 C LOW LIMIT OF OUTPUT = 0.0<br />2026 C HIGH LIMIT OF OUTPUT = 100.0<br />2028 C ERROR DEADBAND = %X%DB1<br />2030 C NOISY PROCESS VARIABLE = %X%NP1<br />2034 C ERROR REPORT POINT = %X%ERR<br />2036 IF (%X%RP1.LT.%X%LP1) THEN GOTO 2042<br />2038 ADAPTS (%X%SSP, %X%LP1, %X%SSS, 1, %X%KC, %X%TC, 1, -0.1, 5.0,  0.0, 100.0, %X%DB1, %X%NP1, %X%ERR)<br />2040 C SUPPLY FAN RAMP<br />2042 TABLE ($SPFRMP %X%RP1, 0, 0, 180, 100)<br />2044 C SUPPLY FAN VFD SIGNAL<br />2046 MIN (%X%SVO, %X%LP1, %X%LP1)<br />2048 ..."
		},

	"ALMACK": {
			"function": "ALMACK",
			"description": "Alarm acknowledge.  This is a state point to show if a point that was in alarm has been acknowledged.",
			"example": "IF(\"ALARM.1\" .EQ. ALMACK) THEN ON(\"ALL.CLEAR\")"
		},
	
	"ALARM": {
			"function": "if (pt1.eq.ALARM) then...",
			"description": "This status indicator is used to determine if the status of point (pt1) is in the ALARM state. This comparison will be true if the point is in the ALARM state.",
			"example": "200 IF (TEMP02.EQ.ALARM) THEN ON(FAN)"
		},

	"ALMCNT": {
			"function": "ALMCNT",
			"description": "A resident point that keeps track of the total number of points in the field panel that are in alarm. A point automatically adds one to the value of ALMCNT whenever the point enters an alarm state. When a point returns to the normal state, one is subtracted from the value of ALMCNT.",
			"example": "340 IF (ALMCNT.GT.0) THEN ON(ALARM7)"
		},

	"ALMCT2": {
			"function": "ALMCT2",
			"description": "A resident point that you can use to maintain an alarm count for a specific type of point. When a point enters an alarm state, the point adds one to both the value of ALMCNT and ALMCT2. When a point returns to the normal state, one is subtracted from ALMCNT and ALMCT2.",
			"example": "300 C IF THE SECOND LEVEL ALARM COUNTER<br />310 C BECOMES GREATER THAN 5, COMMAND ON<br />320 C ALARM8<br />330 C<br />340 IF (ALMCT2.GT.5) THEN ON(ALARM8)"
		},

	"ALMPRI": {
			"function": "ALMPRI(pt1)",
			"description": "This function accesses the alarm priority level of a point defined in an enhanced alarming control strategy. The value of ALMPRI can range from 1 through 6. Besides testing ALMPRI for a specific value, you can also assign the value of ALMPRI to another point.",
			"example": "Example 1:<br />230 C<br />232 C THIS LINE TESTS IF THE POINT CALLED<br />234 C RMTEMP IS AT ALARM PRIORITY LEVEL 1.<br />236 C<br />240 IF (ALMPRI(RMTEMP).EQ.1) THEN ON (OPBELL)<br />Example 2:<br />330 C<br />332 C THIS LINE ASSIGNS THE ALARM<br />334 C PRIORITY LEVEL OF RMTEMP TO THE<br />336 C POINT CALLED TMPPRI.<br />338 C<br />340 TMPPRI = ALMPRI(RMTEMP)"
		},

	"ARG1": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG2": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG3": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG4": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG5": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG6": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG7": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG8": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG9": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG10": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG11": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG12": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG13": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG14": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARG15": {
			"function": "$ARG1 through $ARG15",
			"description": "A $ARGn variable represents an actual point name used in a subroutine. Instead of defining actual point names inside of subroutines, values are transferred to $ARGn variables. The $ARGn variables represent their corresponding points as functions and calculations are performed in the subroutine. When the value of a $ARGn variable changes, the value of the corresponding point is also updated.",
			"example": "1000 GOSUB 2000 OATEMP, RMTEMP, SETPT<br />The program branches to line number 2000. When the computer encounters $ARG1 in the program, the computer assigns the available point name's (OATEMP) value to $ARG1. When the computer encounters $ARG2, it assigns the next available point as defined in the GOSUB command. In this example, the values would be assigned accordingly:<br />The value of OATEMP = $ARG1<br />The value of RMTEMP = $ARG2<br />The value of SETPT = $ARG3"
		},

	"ARITHMETIC": {
			"function": "None",
			"description": "Arithmetic operators are mathematically related functions that are performed on two or more operands (numbers). When used in PPCL, the value of the calculation is determined and assigned to a point name or local variable for future reference.",
			"example": "None"
		},

	"ASSIGNMENT": {
			"function": "Point = Expression",
			"description": "Assigns the value of an Expression to the value of a Point.",
			"example": "560 COUNT = COUNT + 1.0"
		},

	"ATN": {
			"function": "Point 1 = ATN(Value 1)",
			"description": "A trigonometric function that calculates the arc-tangent of a value (Value 1). That value is then stored in a defined location (Point 1). All values used with this function are expressed in degrees.",
			"example": "500 THETA = ATN(VALUE1)"
		},

	"AUTO": {
			"function": "if (pt1.eq.AUTO) then...",
			"description": "This status indicator is used to compare the operational status of a point to the AUTO status indicator. This comparison will be true if the point is in the AUTO state.",
			"example": "200 IF (HOAFAN.EQ.AUTO) THEN ON(LIGHT3)"
		},

	"BATT": {
			"function": "$BATT",
			"description": "For field panels that have the ability to monitor the strength of their backup battery, this resident point allows you to access that status. The status of $BATT can be tested for a numeric value. The status can also be tested with the use of the backup battery status indicators. Testing can be implemented accordingly:",
			"example": "Example 1:<br />200 IF ($BATT.EQ.100) THEN ALARM(P26BAT)<br />210 IF ($BATT.EQ.DEAD) THEN ALARM(P26BAT)"
		},

	"COM": {
			"function": "Point 1 = COM(Value 1)",
			"description": "A function that calculates a one's complement value for a point (Value 1). The one's complement function converts digital values (0 or 1) to their opposite values. That value is then stored in a defined location (Point 1).",
			"example": "500 LLSTAT = COM(PROF01)"
		},

	"COS": {
			"function": "Point 1 = COS(Value1)",
			"description": "A trigonometric function that calculates the cosine of a value (Value 1). That value is then stored in a defined location (Point 1). All values used with this function are expressed in degrees.",
			"example": "700 C<br />701 C THIS FORMULA COMPUTES REAL POWER<br />702 C WHEN VOLTS, AMPS, AND PHASE ANGLE<br />703 C ARE KNOWN.<br />704 C<br />706 PWR = V * I * COS(THETA)"
		},

	"CRTIME": {
			"function": "CRTIME",
			"description": "This point maintains the current time and stores the value in a decimal format. The values for this point can range from 0.00 to 23.98. For example, 7:30 p.m. = 19.50.",
			"example": "500 C<br />501 C THIS CODE DEFINES A TIME PERIOD<br />502 C FROM 6:45 A.M. TO 5:30 P.M. FOR<br />503 C SFAN TO OPERATE.<br />504 C<br />510 IF (CRTIME.GE.6.75.AND.CRTIME.LE.17.50) THEN ON(SFAN)ELSE OFF(SFAN)"
		},

	"DAY": {
			"function": "DAY",
			"description": "This point specifies the current day of the week. The values used for the DAY point are as follows:",
			"example": "300 IF (DAY.EQ.1) THEN TOTRAN = 0"
		},

	"DAYMOD": {
			"function": "if (pt1.eq.DAYMOD) then...",
			"description": "This status indicator determines if an equipment controller is in DAY mode. For some equipment controllers, DAY mode is also referred to as OCC (occupied) mode. If an equipment controller is in occupied mode, PPCL recognizes this status as DAYMOD.",
			"example": "200 IF (CTLR1.EQ.DAYMOD) THEN DAYSP = 75.0"
		},

	"DAYOFM": {
			"function": "DAYOFM",
			"description": "This point specifies a particular day of any month. The value for this point corresponds to the numerical representation of a specific day in a month. Allowable values for the DAYOFM point are 1 through 31.",
			"example": "160 C THIS SECTION OF CODE DETERMINES IF<br />162 C IT IS THE FIRST DAY OF THE MONTH.<br />164 C IF SO, SET TOTMON TO 0.<br />166 C<br />180 IF (DAYOFM.EQ.1) THEN TOTMON = 0"
		},

	"DBSWIT": {
			"function": "DBSWIT(Type,Input,Low,High,Point1,...,Point12)",
			"description": "This command is used to obtain an ON/OFF switching action of an output point. The operational status of the point is regulated by an analog point using a predefined deadband. This is the software equivalent of a thermostat.",
			"example": "Example 1<br />200 DBSWIT(1,RMTEMP,LDBAND,HDBAND,SFAN, RFAN)<br />Example 2<br />200 DBSWIT(1,RMTEMP,55,58,SFAN,RFAN)"
		},

	"DC": {
			"function": "DC(Point 1,Pattern 1,...,Point 8,Pattern 8)",
			"description": "This command is used to duty cycle motors and save energy by reducing the run time of oversized equipment. A one hour interval of time is broken down into four 15 minute segments. Each segment is then broken into three 5 minute patterns. The ON and OFF commands defined in the patterns are represented by numeric codes.",
			"example": "1000 C THIS DC COMMAND DUTY CYCLES EFAN1<br />1010 C ACCORDING TO THE FOLLOWING SCHEDULE:<br />1020 C<br />1030 C FIRST 15 MINUTES - OFF, OFF, OFF (0)<br />1040 C SECOND 15 MINUTES - ON, OFF, ON (5)<br />1050 C THIRD 15 MINUTES - OFF, ON, ON (3)<br />1060 C FOURTH 15 MINUTES - OFF, OFF, ON (1)<br />1070 DC(EFAN1,1350)<br />The code numbers and patterns are evaluated by reading the time in 5 minute intervals from right to left. The first 15 minute pattern is determined by the right-most code digit.  The last 15 minute pattern is determined by the left-most code number."
		},

	"DCR": {
			"function": "DCR(Point 1,Temp 1,High 1,Low 1,...,Point 4,Temp 4,High 4,Low 4)",
			"description": "This command duty cycles an output point to keep a corresponding temperature within a dead band defined with low and high values. This function allows you to define up to four points. For each point, you must define a temperature and high and low parameter. An ON/OFF decision is made every 5 minutes according to the value of the parameters. The output point is ON when the temperature point is above the high limit or below the low limit.",
			"example": "200 C THIS COMMAND WILL TURN ON IF<br />210 C SFAN'S VALUE FALLS BELOW 68 OR<br />220 C RISES ABOVE 78. THE POINT SFAN01<br />230 C WILL REMAIN ON/OFF FOR AT LEAST 5<br />240 C MINUTES ON EACH CYCLE.<br />230 DCR(SFAN01,RM109,78.0,68.0)"
		},

	"DEACT": {
			"function": "DEACT(Line 1,..., Line 16)",
			"description": "Disables 1 to 16 lines of PPCL so that they are not examined or executed.",
			"example": "100 IF (TIME.GT.8:00.AND.TIME.LE.17:00) THEN ACT(120,130) ELSE DEACT(120,130)"
		},

	"DEAD": {
			"function": "if ($BATT.eq.DEAD) then...",
			"description": "This indicator is used to compare the value of the $BATT resident point to determine if the backup battery is discharged. The result of the comparison will be true if the battery is discharged. This function can only be used in field panels that have the ability to monitor the strength of their backup battery.",
			"example": "600 IF ($BATT.EQ.DEAD) THEN ALARM(P26BAT)"
		},

	"DEFINE": {
			"function": "DEFINE(Label,\"String\")",
			"description": "This command assigns a string value to an identifying label that is delimited with the percentage character (%). The % delimiter allows the user to concatenate prefix or suffix strings with a partial point name to form a long name.",
			"example": "Example of defining abbreviations<br /><br />10 DEFINE(B, \"MAIN BUILDING\")<br />20 DEFINE(F, \"FLOOR\")<br />30 DEFINE(TEC orBACnet FLN Device, \"MYTEC orBACnet FLN DEVICE\")<br />40 DEFINE(SP, \"SET POINT\")<br /><br />Example of using abbreviations<br />10 ON( \"%B%.%F%  1.HEATER\")<br />20 C equivalent to ON( \"MAIN  BUILDING.FLOOR  1.HEATER\")<br />30 C<br />40 OFF( \"FIFTH  %F%.LIGHTS\")<br />50 C equivalent to OFF( \"FIFTH  FLOOR.LIGHTS\")<br />60 C<br />70 SET( 0.8, \"%TEC orBACnet FLN Device%:DAMPER\")<br />80 C equivalent to SET( 0.8, \"MYTEC orBACnet FLN Device DEVICE:DAMPER\" )<br />90 C<br />100 %SP% = 72.5<br />110 C equivalent to \"SET  POINT\" = 72.5<br />120 C<br />130 IF ( \"%B%.TEMP\"  .LT.  %SP% ) THEN ON ( %B%.HEATER )"
		},

	"DISABL": {
			"function": "DISABL(Line 1,..., Line 16)",
			"description": "Disables 1 to 16 lines of PPCL so that they are not examined or executed. The DEACT and DISABL commands can be used interchangeably.",
			"example": "100 IF (TIME.GT.8:00.AND.TIME.LE.17:00) THEN ENABLE(120,130) ELSE DISABL (120,130)"
		},

	"DISALM": {
			"function": "DISALM(Point 1,...,Point 16)",
			"description": "This command disables the alarm reporting capabilities for specified points. Up to 16 points can be disabled for alarm reporting by one command.",
			"example": "50  IF (SFAN.EQ.OFF) THEN DISALM(ROOM1) ELSE ENALM(ROOM1)"
		},

	"DISCOV": {
			"function": "DISCOV(pt1, ..., pt16)",
			"description": "This is NOT discover.  In fact, it is disable COV.  It's the opposite of ENCOV(), and disables COV reporting on the specified points. ",
			"example": "DISCOV(\"TRUMPS.AT.MAR.A.LOGA.AGAIN\") would disable the COV reporting for that point.  Probably a good idea, otherwise tons of COVs can eat a lot of memory and communication bandwidth."
		},

	"DPHONE": {
			"function": "DPHONE(Phone 1,..., Phone 16)",
			"description": "Disables 1 to 16 telephone number IDs which represents the numeric codes given to the actual telephone numbers defined in the device. The DPHONE command cannot be used over a network.",
			"example": "532 DPHONE(1,2,3,5,6)"
		},

	"ELSE": {
			"function": "IF(exp) THEN x ELSE y",
			"description": "This conditional logic command is used to provide customized decision logic. When the IF expression is true, the THEN command is executed. If the condition is false, the ELSE command (if defined) is executed.",
			"example": "110 IF (OATEMP.GT.70.0) THEN OADPR = 80.0<br />Example of IF THEN ELSE<br />310  IF (TIME.GT.8:00.AND.TIME.LT.16:00) THEN ON(@NONE,SFAN) ELSE ON(@OPER, SFAN)"
		},

	"EMAUTO": {
			"function": "EMAUTO(Point 1,...,Point 16)",
			"description": "This command is used to change LOOAP or LOOAL points to the AUTO (local control) state with emergency priority. You can command up to 16 points with this command.",
			"example": "None"
		},

	"EMER": {
			"function": "@EMER",
			"description": "Identifies the emergency priority level indicator.",
			"example": "The @EMER command is typically used in one of the following situations:<br />Using the @priority indicator in this manner will not release the point if it has a higher priority (SMOKE or OPER)."
		},

	"EMFAST": {
			"function": "EMFAST(Point 1,...,Point 16)",
			"description": "This command is used to change LFSSL, LFSSP, LFMSSL, or LFMSSP points to the FAST state with emergency priority. You can command up to 16 points with this command.",
			"example": "None"
		},

	"EMOFF": {
			"function": "EMOFF(Point 1,...,Point 16)",
			"description": "When this command is executed, the defined points are commanded OFF. Depending on the type of firmware you have and how you define the parameters, the priority of the point can also be changed. You can command up to 16 points with this command.",
			"example": "None"
		},

	"EMON": {
			"function": "EMON(Point 1,...,Point 16)",
			"description": "When this command is executed, the defined points are commanded ON. Depending on the type of firmware you have and how you define the parameters,  the priority of the point can also be changed. You can command up to 16 points with this command.",
			"example": "None"
		},

	"EMSET": {
			"function": "EMSET(Value,Point 1,...,Point 15)",
			"description": "This command is used to set the value of analog points with emergency priority. You can define a total of 15 points with a single command.",
			"example": "None"
		},

	"EMSLOW": {
			"function": "EMSLOW(Point 1,...,Point 16)",
			"description": "Description",
			"example": "None"
		},

	"ENABLE": {
			"function": "ENABLE(Line 1,..., Line 16)",
			"description": "Enables 1 to 16 lines of PPCL so that they can be examined and executed. The ACT and ENABLE commands can be used interchangeably.",
			"example": "100 IF (TIME.GT.8:00.AND.TIME.LT.17:00) THEN ENABLE(120) ELSE DISABL(120)"
		},

	"ENALM": {
			"function": "ENALM(Point 1,...,Point 16)",
			"description": "This command enables the alarm reporting capabilities for the specified points. Up to 16 pointscanbe enabled for alarm reporting by one command.",
			"example": "50  IF (SFAN.EQ.ON) THEN ENALM(ROOM1) ELSE DISALM(ROOM1)"
		},

	"ENCOV": {
			"function": "ENCOV(pt1, ..., pt16)",
			"description": "Enable the COV reporting of pt1 through pt16.  Opposite of DISCOV()",
			"example": "ENCOV(\"TRUMPS.AT.MAR.A.LOGA.AGAIN\") would enable the COV reporting for that point.  Watch out, tons of COVs can eat a lot of memory and communication bandwidth."
			},

	"EPHONE": {
			"function": "EPHONE(Phone 1,..., Phone 16)",
			"description": "Enables 1 to 16 telephone number IDs which represents the numeric codes given to the actual telephone numbers defined in the device. The EPHONE command cannot be used over a network.",
			"example": "532 EPHONE(1,2,3,5,6)"
		},

	"EQ": {
			"function": "if (value1.EQ.value2) then...",
			"description": "Compares two values to determine if the first value (value1) is equal to the second value (value2). The comparison between the two values is true if value1 is equal to value2.",
			"example": "500 C IF THE ROOM TEMP IS EQUAL TO 80,<br />510 C THEN SET THE SET POINT TO 70.<br />520 C<br />530 IF (RMTEMP.EQ.80.0) THEN RMSET = 70.0"
		},

	"EXP": {
			"function": "Point 1 = EXP(Value 1)",
			"description": "This function calculates the natural antilog of a point (Value 1) and stores that value in a defined location (Point 1).",
			"example": "860 NATANT = EXP(VALUE1)"
		},

	"FAILED": {
			"function": "if (pt1.eq.FAILED) then...",
			"description": "This status indicator is used to compare the operational status of a point to the FAILED status indicator. This comparison will be true if the point is in the FAILED state.",
			"example": "200 IF (AHU2.EQ.FAILED) THEN ON(HORN)"
		},

	"FAST": {
			"function": "if (pt1.eq.FAST) then...",
			"description": "This indicator is used to compare the operational status of a point name to the FAST status indicator. This comparison will be true if the point is in the FAST state.",
			"example": "200 IF (FAN.EQ.FAST) THEN DAMPER = 8.0"
		},

	"GE": {
			"function": "if (value1.GE.value2) then...",
			"description": "Compares two values to determine if the first value (value1) is greater than or equal to the second value (value2). The comparison between the two values is true if value1 is greater than or equal to value2.",
			"example": "700 C IF THE ROOM TEMP IS GREATER THAN<br />710 C OR EQUAL TO 80, THEN SET THE SET<br />720 C POINT TO 70<br />730 C<br />740 IF (RMTEMP.GE.80.0) THEN RMSET = 70.0"
		},

	"GOSUB": {
			"function": "GOSUB line# (pt1,...,pt15)",
			"description": "GOSUB transfers control to a subroutine. Variable arguments can be passed to the subroutine from the mainline code by using $ARG local variables. When program reaches a RETURN statement at the end of the subroutine, the program control is transferred back to the GOSUB statement. The values in the $ARG points replace their respective point values. The computer then continues processing at the next sequential line number.",
			"example": "The following example demonstrates how a number of PPCL commands are used in subroutines. The main subroutine commands, GOSUB and RETURN are required for all subroutines. The $ARG command demonstrates how values are passed between subroutines. The GOTO command is used to bypass subroutines. This program uses the variables pt1 and pt2 to demonstrate the passing of values between subroutines.<br />100 C ***MAINLINE PROGRAM FOR LOGICAL FIRMWARE<br />110 C LEARNING HOW TO USE GOSUB, RETURN, AND<br />112 C $ARG COMMANDS.***<br />120 C<br />130 GOSUB 1010<br />300 GOSUB 2010 PT1, PT2<br />400 GOTO 3000<br /><br />1000 C --SUBROUTINE 1<br />1001 C THIS SUBROUTINE ASSIGNS NUMBERS<br />1002 C TO PT1 AND PT2. IT THEN RETURNS<br />1004 C CONTROL TO THE MAIN PROGRAM.<br />1008 C<br />1010 PT1 = 10<br />1020 PT2 = 20<br />1030 RETURN<br />2000 C --SUBROUTINE 2<br />2001 C THIS SUBROUTINE PASSES THE VALUE OF<br />2002 C PT1 AND PT2 TO THEIR RESPECTIVE $ARG<br />2003 C POINTS. IT THEN ADDS ONE TO BOTH $ARG<br />2004 C POINTS AND RETURNS THE NEW VALUES TO<br />2005 C PT1 AND PT2.<br />2006 C<br />2010 $ARG1 = $ARG1 + 1<br />2020 $ARG2 = $ARG2 + 1<br />2030 RETURN<br />3000 C*** After the subroutine finishes executing, the program returns to Mainline code.<br />A multiple level subroutine is a block of program code which is called from within another subroutine. Each call you make within a subroutine constitutes a level. You are limited to a total of eight levels.<br />If you need to use multiple level subroutines, the rules that govern $ARGn variables and point name declarations for GOSUB commands change slightly. When using $ARGn variables in a multiple level subroutines, you cannot share the $ARGn variables between subroutine levels. Once a value is assigned to a $ARGn variable, you must retain that value by not assigning another value to that variable.<br />The following example demonstrates the use of $ARGn variables and point declarations used in multiple level subroutines. This programming example contains a main line section of program code and three subroutines. This example demonstrates a method to preserve the values of $ARGn variables as you transfer program control among subroutines.<br />1000 C MAINLINE PROGRAM FOR LOGICAL FIRMWARE<br />1010 C<br />1020 C THIS PROGRAM TEACHES HOW GOSUBS AND<br />1030 C $ARG POINTS WORK IN MULTIPLE<br />1040 C LEVEL SUBROUTINES.<br />1050 C<br />1100 ...<br />1200 ...<br />1300<br />1350 C THIS GOSUB CALLS THE FIRST SUBROUTINE<br />1360 C AND PASSES A VALUE DEFINED IN PT1 TO<br />1370 C TO $ARG1.<br />1380 C<br />1500 GOSUB 2030 PT1<br />2000 C<br />2010 C SUBROUTINE #1<br />2020 C<br />2030 ...<br />2040 ...<br />2050 ...<br />2060 C IN ORDER TO PRESERVE THE VALUE LOCATED<br />2070 C IN $ARG1, YOU MUST DEFINE $ARG1 IN THE<br />2080 C SECOND SUBROUTINE'S CALLING GOSUB. THE<br />2090 C PROGRAM ALSO PASSES A SECOND POINT<br />2100 C VALUE NAMED PT2.<br />2110 C<br />2500 GOSUB 3030 $ARG1,PT2<br />2510 RETURN<br />3000 C<br />3010 C SUBROUTINE #2<br />3020 C<br />3030 ...<br />3040 ...<br />3050 C IN ORDER TO PRESERVE THE VALUES LOCATED<br />3060 C IN $ARG1 AND $ARG2, YOU MUST DEFINE<br />3070 C BOTH POINTS IN THE THIRD SUBROUTINE'S<br />3080 C CALLING GOSUB. THE PROGRAM ALSO PASSES<br />3090 C A THIRD POINT VALUE CALLED PT3.<br />3100 C<br />3200 GOSUB 4020 $ARG1,$ARG2,PT3<br />3210 RETURN<br />4000 C --SUBROUTINE #3<br />4010 C<br />4020 ...<br />4030<br />4040 RETURN"
		},

	"GOTO": {
			"function": "GOTO linenum",
			"description": "This is called a branch statement. Control is given up from the sequentially following line, and given to the linenumber specified.  It is generally considered bad practice in coding to make a GOTO go up the code (going from line 3300 to line 3200 is a No No), except the case of the very end, where a GOTO sends control back to the top of the code, creating a do while loop.",
			"example": "GOTO 3200 would go to line number 3200"
		},

	"GT": {
			"function": "if (value1.GT.value2) then...",
			"description": "Compares two values to determine if the first value (value1) is greater than the second value (value2). The comparison between the two values is true if value1 is greater than value2.",
			"example": "250 C IF THE ROOM TEMP IS GREATER THAN<br />260 C 80, THEN SET THE SET POINT TO 70<br />270 C<br />280 IF (RMTEMP.GT.80.0) THEN RMSET = 70.0"
		},

	"HAND": {
			"function": "if (pt1.eq.HAND) then...",
			"description": "This indicator is used to compare the operational status of a point name to the HAND status indicator. This comparison will be true if the point is currently being controlled through the use of a manual override switch.",
			"example": "200 IF (FAN.EQ.HAND) THEN OADAMP = 8.0"
		},

	"HLIMIT": {
			"function": "HLIMIT(Value,Point 1,...,Point 15)",
			"description": "This command is used to set a new high alarm limit for alarmable analog points. Up to 15 points can be set to the same high limit with one HLIMIT command.",
			"example": "100 IF (OATEMP.GT.70.0) THEN HLIMIT(84.0, ROOM16)ELSE HLIMIT(78.0,ROOM16)"
		},

	"HOLIDA": {
			"function": "HOLIDA(Month 1,Day 1,...,Month 8,Day 8)",
			"description": "This command is used to define the dates of holidays up to a year in advance. By entering the pairs of numbers for the dates (month, day). You can define up to eight holidays with one HOLIDA command.",
			"example": "630 HOLIDA(12,24,12,25,12,26,12,27)"
		},

	"IF": {
			"function": "IF(exp) THEN x ELSE y",
			"description": "This conditional logic command is used to provide customized decision logic. When the IF expression is true, the THEN command is executed. If the condition is false, the ELSE command (if defined) is executed.",
			"example": "110 IF (OATEMP.GT.70.0) THEN OADPR = 80.0<br />Example of IF THEN ELSE<br />310  IF (TIME.GT.8:00.AND.TIME.LT.16:00) THEN ON(@NONE,SFAN) ELSE ON(@OPER, SFAN)"
		},

	"INITTO": {
			"function": "INITTO(Value, Point 1,..., Point 15)",
			"description": "This command is used to change the totalized value of a point to a new value (generally 0). A single command can define up to 15 point names which receive the new value.",
			"example": "10 IF (DAYOFM.EQ.1.0) THEN INITTO(0.0, PMP1,PMP2)"
		},

	"LE": {
			"function": "if (value1.LE.value2) then...",
			"description": "Compares two values to determine if the first value (value1) is less than or equal to the second value (value2). The comparison between the two values is true if value1 is less than or equal to value2.",
			"example": "300 C IF THE ROOM TEMP IS LESS THAN OR<br />310 C EQUAL TO 80, THEN SET THE SET POINT<br />320 C TO 70<br />330 C<br />340 IF (RMTEMP.LE.80.0) THEN RMSET = 70.0"
		},

	"LINK": {
			"function": "LINK",
			"description": "This resident point indicates the condition of communications. Depending on the status of the communications link, a point contains the value 0 or 1.<br />- If the LINK value is 0, the node where the LINK point resides is not communicating with the network.<br />- If the LINK value is 1, the node where the LINK point resides is actively communicating with the network.",
			"example": "300 IF (LINK.EQ.0) THEN ON(ALARM)"
		},

	"LLIMIT": {
			"function": "LLIMIT(Value,Point 1,...,Point 15)",
			"description": "This command is used to set a new low alarm limit for alarmable analog points. Up to 15 points can be set to the same low limit with one LLIMIT command.",
			"example": "100 IF (OATEMP.GT.68.0) THEN LLIMIT(76.0, ROOM16) ELSE LLIMIT(68.0,ROOM16)"
		},

	"LOC1": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC2": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC3": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC4": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC5": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC6": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC7": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC8": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC9": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC10": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC11": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC12": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC13": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC14": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOC15": {
			"function": "$LOC1 through $LOC15",
			"description": "These points are used to store the results of calculations. A $LOCn variable can store an analog or digital value and can be used throughout the program.",
			"example": "Example 1:<br />200 MIN ($LOC1,PT1,PT2,PT3)<br />Example 2:<br />100 $LOC7 = (50/VALUE1+10.0) * 2.0"
		},

	"LOCAL": {
			"function": "LOCAL(pt1,... ,pt16)",
			"description": "Special Function statement that allows the program to reference and create local points as$pt1through$pt16etc. Other programs can command these points by referencing the program name, followed by the system delimiter (:), followed by the local point name.",
			"example": "Example 1<br />The following is an example of commanding a local point contained within a program:<br />100 LOCAL(FANPT)<br />200 ON($FANPT)<br />Example 2<br />The following is an example of a program using the value of a local point in a different program (where PROG1 is the program name):<br />300 IF(\"PROG1:FANPT\".EQ.ON)THEN ..."
		},

	"LOG": {
			"function": "Point 1 = LOG(Value 1)",
			"description": "This function calculates the natural log of a point (Value 1) and stores that value in a defined location (Point 1).",
			"example": "200 ENTH = LOG(VALUE1)"
		},

	"LOGICAL": {
			"function": "None",
			"description": "While relational operators compare two values producing a condition, logical operators compare two conditions. The result of a comparison between the two conditions is itself, called a condition. If the result of the conditions is true, then a specific action is taken. If the result is false, then an alternate action is performed.",
			"example": "None"
		},

	"LOOP": {
			"function": "LOOP(Type,Process Var,Control Var,Set Point,Proportional,Integral,Derivative,Sample Time,Bias,Low Limit,High Limit,Not Used)",
			"description": "This command performs closed loop control using any combination of proportional, integral, and derivative control actions in either direct or reverse acting modes. The Loop command monitors an input point (process variable), compares it with a desired value (the set point), and adjusts an output (control variable) to bring the input closer to the set point.",
			"example": "2000 C CONTROL LOOP STATISTICS (LOGICAL<br />2002 C FIRMWARE)<br />2004 C DIRECT CONTROL LOOP<br />2006 C INPUT = RM100  OUTPUT = HVALVE<br />2008 C SETPOINT = HSETPT<br />2010 C PROPORTIONAL GAIN = PGAIN-NO I OR G<br />2012 C  GAINS<br />2014 C SAMPLE TIME = 1 SECOND<br />2016 C BIAS = 5.5<br />2018 C LOW = 3.0<br />2020 C HIGH = 9.0<br />2022 LOOP(0,RM100,HVALVE,HSETPT,PGAIN,0, 0,1, 5.5,3.0,9.0,0)"
		},

	"LSQDAT": {
			"function": "LSQDAT(Point 1, Point 2, Point 3)",
			"description": "This command defines the input values necessary for performing XYZ Least Squares Curve Fit Function calculations. A total of 8 lines is required to perform the calculation. In the first line of PPCL, the LSQ2 command defines the formula and LSQDAT defines the input values in the following 7 lines.",
			"example": "6670 LSQDAT(X11, Y11, Z11)<br />6680 LSQDAT(X12, Y12, Z12)<br />6690 LSQDAT(X13, Y13, Z13)<br />6700 LSQDAT(X14, Y14, Z14)<br />6710 LSQDAT(X15, Y15, Z15)<br />6720 LSQDAT(X16, Y16, Z16)<br />6730 LSQDAT(X17, Y17, Z17)"
		},

	"LT": {
			"function": "if (value1.LT.value2) then...",
			"description": "Compares two values to determine if the first value (value1) is less than the second value (value2). The comparison between the two values is true if value1 is less than value2.",
			"example": "900 C IF THE ROOM TEMP IS LESS THAN 80,<br />910 C THEN SET THE SET POINT TO 70.<br />920 C<br />930 IF (RMTEMP.LT.80.0) THEN RMSET = 70.0"
		},

	"MAX": {
			"function": "MAX(Result,Point 1,...,Point 15)",
			"description": "This command selects the largest value from 2 to 15 point names or numbers, and stores that value in the result point.",
			"example": "10 MAX(HOTZON,ZONE1,ZONE2,ZONE3)"
		},

	"MIN": {
			"function": "MIN(Result,Point 1,...,Point 15)",
			"description": "This command selects the lowest value from 2 to 15 point names or numbers, and stores that value in the Result point.",
			"example": "10 MIN(COOLZN,ZONE1,ZONE2,ZONE3)"
		},

	"MONTH": {
			"function": "MONTH",
			"description": "This point specifies the current month. The values for the MONTH point are as follows:",
			"example": "950 IF (MONTH.GE.4.AND.MONTH.LE.10) THEN SEASON = 1 ELSE SEASON = 0"
		},

	"NE": {
			"function": "if (value1.NE.value2) then...",
			"description": "Compares two values to determine if the first value (value1) is not equal to the second value (value2). The comparison between the two values is true if value1 is not equal to value2.",
			"example": "600 C IF THE ROOM TEMP IS NOT EQUAL TO<br />610 C 80, THEN SET THE SET POINT TO 70.<br />620 C<br />630 IF (RMTEMP.NE.80.0) THEN RMSET = 70.0"
		},

	"NGTMOD": {
			"function": "if (pt1.eq.NGTMOD) then...",
			"description": "This status indicator determines if a equipment controller is in NIGHT mode. For some equipment controllers, NIGHT mode is also referred to as UNOCC (unoccupied) mode. If an equipment controller is in unoccupied mode, PPCL recognizes this status as NGTMOD.",
			"example": "200 IF (CNTRL1.EQ.NGTMOD) THEN NGTSP = 78.0"
		},

	"NIGHT": {
			"function": "NIGHT(Point 1,...,Point 16)",
			"description": "Used to command a logical point to NIGHT mode. For some equipment controllers, NIGHT mode is also referred to as UNOCC (unoccupied) mode. If an equipment controller is in the unoccupied mode, PPCL recognizes this status as NIGHT.",
			"example": "100  IF (TIME.LT.7:00.OR.TIME.GT.18:00) THEN NIGHT(LCTLR2) ELSE DAY(LCTLR2)"
		},

	"NODE0": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE1": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE2": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE3": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE4": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE5": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE6": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE7": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE8": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE9": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE10": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE11": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE12": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE13": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE14": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE15": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE16": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE17": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE18": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE19": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE20": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE21": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE22": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE23": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE24": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE25": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE26": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE27": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE28": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE29": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE30": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE31": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE32": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE33": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE34": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE35": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE36": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE37": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE38": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE39": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE40": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE41": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE42": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE43": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE44": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE45": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE46": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE47": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE48": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE49": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE50": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE51": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE52": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE53": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE54": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE55": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE56": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE57": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE58": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE59": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE60": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE61": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE62": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE63": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE64": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE65": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE66": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE67": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE68": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE69": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE70": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE71": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE72": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE73": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE74": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE75": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE76": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE77": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE78": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE79": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE80": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE81": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE82": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE83": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE84": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE85": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE86": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE87": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE88": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE89": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE90": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE91": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE92": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE93": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE94": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE95": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE96": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE97": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE98": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NODE99": {
			"function": "NODE0 through NODE99",
			"description": "(NOT BACnet COMPATIBLE see LINK) These resident points allow the program to check the status of a node on the network. All devices or CPUs on the network occupy a node corresponding to its address. This point is generally used to test for normal operation of nodes for control strategies that depend on network communication.<br /><br />Notes:<br />NODE resident points cannot be used in field panels on an EthernetAutomation Level Network (ALN). To use PPCL to monitor the failure status of an Ethernet field panel, use the ADDRESS subpoint of the field panel and equate it to FAILED.",
			"example": "Example 1:<br />600 IF (NODE22.EQ.FAILED) THEN ON(ALARM)<br />Example 2:<br />300 IF (\"!EthernetMBC1:ADDRESS\".EQ.FAILED)THEN ON(ALARM)"
		},

	"NONE": {
			"function": "@NONE",
			"description": "This command identifies the PPCL priority level indicator.",
			"example": "The @NONE command can be used to test if a point currently is at PPCL priority. For example, an IF/THEN/ELSE statement would look like the following:<br />300 IF (SFAN.EQ.@NONE) THEN OFF(HORN)"
		},

	"NORMAL": {
			"function": "NORMAL(Point 1,...,Point 16)",
			"description": "This command is used to return points to the normal state. Up to 16 points can be commanded back to normal from an alarm-by-command state.",
			"example": "100 IF (RM90T.GT.80.0) THEN ALARM(ROOM90) ELSE NORMAL(ROOM90)"
		},

	"OFF": {
			"function": "if (pt1.eq.OFF) then...",
			"description": "This indicator is used to compare the operational status of a point name to the OFF status indicator. The result of the comparison will be true if the point is in the OFF state.",
			"example": "200 IF (FAN.EQ.OFF) THEN RTDAMP = 3.0"
		},

	"OIP": {
			"function": "OIP(Trigger, Sequence)",
			"description": "This command is used to mimic operator sequences which are normally entered from a terminal. This command executes most operator functions from within a PPCL program.",
			"example": "102 C OIP COMMAND INFORMATION:<br />104 C    OPERATOR SEQUENCE<br />106 C<br />108 C  - POINT<br />110 C  - DISPLAY<br />112 C  - PRINTER<br />114 C  - YES<br />116 C  - VALUE<br />118 C  - ANY<br />120 C  - NAME<br />122 C  - ALL NAMES<br />124 C<br />130 C  TRIGGER POINT - RPT7AM<br />150 OIP(RPT7AM,\"P/D/P/Y/V/A/N/*\")"
		},

	"OK": {
			"function": "if ($BATT.eq.OK) then...",
			"description": "This indicator is used to compare the value of the $BATT resident point to determine if the backup battery is operational. The result of the comparison will be true if the battery is charged. This function can only be used in field panels that have the ability to monitor the strength of their backup battery.",
			"example": "600 IF ($BATT.EQ.OK) THEN NORMAL(P26BAT)"
		},

	"ON": {
			"function": "if (pt1.eq.ON) then...",
			"description": "This indicator is used to compare the operational status of a point name to the ON status indicator. The result of the comparison will be true if the point is in the ON state.",
			"example": "200 IF (FAN.EQ.ON) THEN RTDAMP = 3.0"
		},

	"ONPWRT": {
			"function": "ONPWRT(Line #)",
			"description": "This command is similar to a GOTO command and allows you to select the first program line that is executed when power has returned. The ONPWRT command is only executed once and is then ignored as long as power stays ON.",
			"example": "10 ONPWRT(1800)"
		},

	"OPER": {
			"function": "@OPER",
			"description": "Identifies the operator priority level indicator.",
			"example": "The @OPER command is typically used in one of the following situations:"
		},

	"PDL": {
			"function": "$PDL",
			"description": "This point takes on the current value of the demand prediction for each calculation interval made by the PDLMTR statement. The point can be assigned to a virtual LAO point and displayed or trended.",
			"example": "350 KWH = $PDL"
		},

	"PDLDAT": {
			"function": "PDLDAT(Load Name,Min On,Min Off,Max Off,kW Value)",
			"description": "Defines the minimum on-time, minimum off-time, maximum off-time, and kilowatt value for a specific load. A group of PDLDAT commands are used in conjunction with a single PDL command in a field panel to define load parameters and maintain a certain kilowatt level (or target) for that group of loads.",
			"example": "102 C PDLDAT COMMAND INFORMATION:<br />104 C<br />106 C  - CONTROLLED POINT - FAN17<br />108 C  - MINIMUM ON TIME - 10 MINUTES<br />110 C  - MINIMUM OFF TIME - 5 MINUTES<br />112 C  - MAXIMUM OFF TIME - 180 MINUTES<br />114 C  - KILOWATT RATING - 10<br />116 C<br />118 PDLDAT(FAN17,10,5,180,10)"
		},

	"PDLDPG": {
			"function": "PDLDPG(Meter Area,Kilowatt 1,Target 1,...,Kilowatt 7,Target 7)",
			"description": "Associates a power consumption target parameter with each PDL statement. This command also calculates the amount of power used by all loads under the control of each PDL command in a specific meter area.",
			"example": "100 PDLDPG(1,TOTKW1,TGT1,TOTKW2,TGT2)"
		},

	"PDLMTR": {
			"function": "PDLMTR(Area,History,Calc Min,Window,Plot Scale,Warning,Meter 1,Default 1,...,Meter 5, Default 5)",
			"description": "This command monitors meters, makes predictions on demand, and keeps report data up-to-date. Only one PDLMTR command can be defined per meter area. PDLMTR commands are responsible for defining:",
			"example": "202 C PDLMTR COMMAND INFORMATION:<br />204  C<br />206  C  - HISTORICAL WEIGHTING FACTOR - 30%<br />208  C  - CALCULATION INTERVAL - 1 MINUTE<br />210  C  - PREDICTION WINDOW - 15 MINUTES<br />212  C  - THE TIME VERSUS DEMAND SECTION OF<br />214  C  THE ACTIVITY REPORT PLOT HAS A<br />216  C  FULL SCALE OF 500 KILOWATTS.<br />218  C - WARNING MESSAGES ARE ENABLED TO<br />220  C  SEND TO ALARM DEVICES.<br />222  C  - THE DEFAULT VALUES OF THE TWO<br />224  C   METER POINTS (METER1 AND<br />226  C   METER2) ARE 100 KILOWATTS AND<br />228  C  50 KILOWATTS RESPECTIVELY.<br />230  C<br />250 PDLMTR(1,30,1,15,500,1,METER1,100,METER2,50)"
		},

	"PDLSET": {
			"function": "PDLSET(Area,Exceed,Set1,Time 1,...,Set7,Time7)",
			"description": "The PDLSET command is responsible for designating the peak demand limiting levels and ensuring that these levels are not exceeded for a meter area. The demand predictions made by the PDLMTR command are compared with the appropriate set points defined by this command. The set points are the basis for determining the number of kilowatts (if any) to shed or restore for the meter area.",
			"example": "101 C PDLSET COMMAND INFORMATION:<br />102 C<br />103 C THIS COMMAND CONTROLS METER AREA 1.<br />104 C THE VIRTUAL LDO POINT WHICH WILL<br />105 C TOGGLE ON AND OFF AT THE END OF<br />106 C THE SET POINT INTERVALS WHEN THE<br />107 C SET POINT WAS EXCEEDED IS CALLED PEAKEX.<br />108 C PDLST1 SET POINT ENDS AT 11:00 A.M.<br />109 C PDLST2 SET POINT ENDS AT 4:30 P.M.<br />110 C<br />120 PDLSET(1,PEAKEX,PDLST1,11:00,PDLST2,16:30)"
		},

	"PRFON": {
			"function": "if (pt1.eq.PRFON) then...",
			"description": "This indicator is used to compare the operational status of a point to the PRFON status indicator. This comparison will be true if the proof for the point is in the ON state.",
			"example": "200 IF (FAN.EQ.PRFON) THEN OADAMP = 8.5"
		},

	"RELATIONAL": {
			"function": "None",
			"description": "Relational operators compare two values. The result of a comparison, called a condition, determines an action. The action depends upon which condition is true.",
			"example": "None"
		},

	"RELEAS": {
			"function": "RELEAS(Point 1,...,Point 16)",
			"description": "This command changes the priority of up to 16 points to NONE. If you change the priority of the points, you can only define a total of 15 points.",
			"example": "Example 1<br />This example shows how to avoid having the RELEAS command issue multiple COVs.This example applies to SCUs with Firmware Revision 9.1 or lower that do not support the @prior command.<br />100 IF (TEMP.EQ.@ALARM) THEN ON(PTWXY1) ELSE OFF(PTWXY1)<br />110 IF(PTWXY1.EQ.ON.AND.PTWXY2.EQ.OFF) THEN EMON(PTWXYZ)<br />120 IF(PTWXY1.EQ.OFF.AND.PTWXY2.EQ.ON) THEN RELEAS(PTWXYZ)<br />130 PTWXY2=PTWXY1<br />Example 2<br />This example shows code written for firmware that does not issue multiple COVs when the RELEAS command is executed.This example applies to SCUs with firmware 9.2,  9.3, 12.2 and higher, and MBCs with firmware 1.2 and higher.<br />200 IF (TEMP.EQ.@ALARM) THEN EMON(PTWXYZ) ELSE RELEAS(@EMER,PTWXYZ)<br />Example 3<br />This example shows how to avoid having the RELEAS command issue multiple COVs.This example applies to SCUs with firmware 10.1 or higher and MBCs with firmware 1.1 or higher.<br />100 IF (TEMP.EQ.@ALARM) THEN EMON(PTWXYZ)<br />110 IF(TEMP.NE.@ALARM.AND.PTWXYZ.NE.@NONE) THEN RELEAS(@EMER,PTWXYZ)<br />120 C  CONTINUE ON WITH THE PROGRAM"
		},

	"ROOT": {
			"function": "Point 1 = (Value 1.ROOT.Value 2)",
			"description": "This function calculates the nthroot of the defined point for Value 1 by raising the value of Value 1 to the power of n(Value 2), n can be an integer or a real number. The value is then stored in a defined location (Point 1).",
			"example": "310 RVAL = (TEMP.ROOT.3.0)"
		},

	"SAMPLE": {
			"function": "SAMPLE(interval sec) statement",
			"description": "Allows you to define how often a command is evaluated. Sample can be helpful in preventing short cycling in ON/OFF decisions, reducing COVs from noisy flow transmitters, and other situations. The allowable commands can include assignment, calculations, and program control (GOTO, GOSUB).",
			"example": "200 SAMPLE(600) ON(HALFAN)"
		},

	"SECND1": {
			"function": "SECND1 through SECND7",
			"description": "These seven points count real time seconds and can be used as timers. The computer adds one to the SECNDn variable for every one second of real time that passes. The value of a SECNDn point can only be set by a PPCL command. The maximum value a SECNDn point can be set to is 9999.",
			"example": "600 IF(SECND1.GT.15) THEN ON(RF) ELSE OFF(RF)"
		},

	"SECND2": {
			"function": "SECND1 through SECND7",
			"description": "These seven points count real time seconds and can be used as timers. The computer adds one to the SECNDn variable for every one second of real time that passes. The value of a SECNDn point can only be set by a PPCL command. The maximum value a SECNDn point can be set to is 9999.",
			"example": "600 IF(SECND1.GT.15) THEN ON(RF) ELSE OFF(RF)"
		},

	"SECND3": {
			"function": "SECND1 through SECND7",
			"description": "These seven points count real time seconds and can be used as timers. The computer adds one to the SECNDn variable for every one second of real time that passes. The value of a SECNDn point can only be set by a PPCL command. The maximum value a SECNDn point can be set to is 9999.",
			"example": "600 IF(SECND1.GT.15) THEN ON(RF) ELSE OFF(RF)"
		},

	"SECND4": {
			"function": "SECND1 through SECND7",
			"description": "These seven points count real time seconds and can be used as timers. The computer adds one to the SECNDn variable for every one second of real time that passes. The value of a SECNDn point can only be set by a PPCL command. The maximum value a SECNDn point can be set to is 9999.",
			"example": "600 IF(SECND1.GT.15) THEN ON(RF) ELSE OFF(RF)"
		},

	"SECND5": {
			"function": "SECND1 through SECND7",
			"description": "These seven points count real time seconds and can be used as timers. The computer adds one to the SECNDn variable for every one second of real time that passes. The value of a SECNDn point can only be set by a PPCL command. The maximum value a SECNDn point can be set to is 9999.",
			"example": "600 IF(SECND1.GT.15) THEN ON(RF) ELSE OFF(RF)"
		},

	"SECND6": {
			"function": "SECND1 through SECND7",
			"description": "These seven points count real time seconds and can be used as timers. The computer adds one to the SECNDn variable for every one second of real time that passes. The value of a SECNDn point can only be set by a PPCL command. The maximum value a SECNDn point can be set to is 9999.",
			"example": "600 IF(SECND1.GT.15) THEN ON(RF) ELSE OFF(RF)"
		},

	"SECND7": {
			"function": "SECND1 through SECND7",
			"description": "These seven points count real time seconds and can be used as timers. The computer adds one to the SECNDn variable for every one second of real time that passes. The value of a SECNDn point can only be set by a PPCL command. The maximum value a SECNDn point can be set to is 9999.",
			"example": "600 IF(SECND1.GT.15) THEN ON(RF) ELSE OFF(RF)"
		},

	"SECNDS": {
			"function": "SECNDS",
			"description": "This point counts real time seconds and can be used as a timer. The computer adds one to the SECNDS variable for every one second of real time that passes. The initial value of the SECNDS point is set by a PPCL command. The maximum value the SECNDS point can be set to is 9999.",
			"example": "890 IF (SFAN.NE.PRFON) THEN SECNDS = 0"
		},

	"SET": {
			"function": "SET(value, Point 1,..., Point 15)",
			"description": "This command is used to change output points to a new value. Up to 15 points can be assigned a new value (14 points when including a priority) with a single set command.",
			"example": "Example 1<br />450 SET(75.0,RMSET1,RMSET2,RMSET3)<br />Example 2<br />550 SET(@EMER,75.0,RMSET1,RMSET2,RMSET3)"
		},

	"SIN": {
			"function": "pt1 = SIN(value1)",
			"description": "A trigonometric function that derives the sine of a value (Value 1). That value is then stored in a defined location (Point 1). All values used with this function are expressed in degrees.",
			"example": "180 VAR = SIN(THETA)"
		},

	"SLOW": {
			"function": "if (pt1.eq.SLOW) then...",
			"description": "This indicator is used to compare the operational status of a point name to the SLOW status indicator. This comparison will be true if the point is in a SLOW state.",
			"example": "200 IF (FAN.EQ.SLOW) THEN DAMPER = 13.0"
		},

	"SMOKE": {
			"function": "@SMOKE",
			"description": "This command identifies the smoke control priority level indicator.",
			"example": "The @SMOKE command is typically used in one of the following situations:<br />Using the @priority indicator in this manner will not release the point if it has a higher priority (OPER)."
		},

	"SQRT": {
			"function": "Point 1 = SQRT(Value 1)",
			"description": "Calculates the square root of a value and stores it in a defined location (Point 1).",
			"example": "180 SRPT1 = SQRT(PT1)"
		},

	"SSTO": {
			"function": "SSTO(Zone,Mode,CST,CSP,EST,LST,OST,ESP,LSP,OSP,AST,ASP)",
			"description": "The SSTO command calculates the optimal start and stop times for each zone based on information derived from the SSTOCO command (outside air temperature, zone temperature, desired zone temperature, etc.) as well as parameters for earliest, latest, and occupancy start times provided in the SSTO command.",
			"example": "60 SSTO(1,1,ONTIM,OFTIM,6:30,7:45, 8:00,15:30,16:45,17:00,0.0,0.0)"
		},

	"SSTOCO": {
			"function": "SSTOCO(Zone,Season,ITEMP,OTEMP,CTEMP, CCOEF 1,CCOEF 2,CCOEF 3,CATSTEP,HTEMP, HCOEF 1, HCOEF 2,HCOEF 3,HATSTEP)",
			"description": "This command defines the thermal characteristics of a zone based on the season, indoor temperature, outdoor temperature, and a variety of heating and/or cooling coefficients that are necessary to calculate optimal start and stop times.",
			"example": "100 SSTOCO(1,SEASON,ROOM10,OATEMP,75.0, 0.01,0.3,0.05,0.083,72.0,0.1,0.1,  0.2,0.083)"
		},

	"STATE": {
			"function": "STATE(@prior,State Text,Point 1,Point 2,Point 3,...,Point 15)",
			"description": "Displays STATE command assist window. STATE commands a digital point to a new state. The custom text that represents each point state (for example, On and Off or Start and Stop) is defined in the state table associated with the point.",
			"example": "None"
		},

	"TABLE": {
			"function": "TABLE(Input,Output,X1 value,Y1 value,...,X7 value,Y7 value)",
			"description": "This command allows you to define a general function of two variables by specifying pairs of coordinates (x,y).",
			"example": "500 C<br />502 C TABLE COMMAND INFORMATION:<br />504 C<br />506 C OATEMP (X)       HWSP (Y)<br />508 C ----------      ----------<br />510 C   0 DEG F       180 DEG F<br />512 C  60 DEG F       100 DEG F<br />514 C<br />520 TABLE(OATEMP,HWSP,0,180,60,100)<br />Below 0°F outside air temperature the hot water set point stays at 180°F. Above 60° F, hot water set point stays at 100 F."
		},

	"TAN": {
			"function": "Point 1 = TAN(Value 1)",
			"description": "A trigonometric function that calculates the tangent of a value (Value 1). That value is then stored in a defined location (Point 1). All values used with this function are expressed in degrees.",
			"example": "930 TANPT1 = TAN(PT1)"
		},

	"THEN": {
			"function": "IF(exp) THEN x ELSE y",
			"description": "This conditional logic command is used to provide customized decision logic. When the IF expression is true, the THEN command is executed. If the condition is false, the ELSE command (if defined) is executed.",
			"example": "110 IF (OATEMP.GT.70.0) THEN OADPR = 80.0<br />Example of IF THEN ELSE<br />310  IF (TIME.GT.8:00.AND.TIME.LT.16:00) THEN ON(@NONE,SFAN) ELSE ON(@OPER, SFAN)"
		},

	"TIMAVG": {
			"function": "TIMAVG(Result,Sample Time,# Samples,Input)",
			"description": "This command is used to find an average value over time. You can select how often the values are taken (sample time) and the number of values taken. The average is always over the most recent sample count and all previous values are discarded.",
			"example": "10 C SIX SAMPLES WILL BE TAKEN TO<br />20 C CALCULATE THE RMAVG.<br />30 C THE INTERVAL BETWEEN EACH SAMPLE<br />40 C IS 10 MINUTES. RMTEMP IS<br />50 C AVERAGED EVERY 60 MINUTES.<br />60 TIMAVG(RMAVG,600,6,RMTEMP)"
		},

	"TIME": {
			"function": "TIME",
			"description": "This point maintains the current time and stores the value in military time. The TIME value can contain a value from 0:00 to 23:59. For example, 7:30 p.m. = 19:30.",
			"example": "500 C<br />501 C THIS CODE DEFINES A TIME PERIOD<br />502 C FROM 6:45 A.M. TO 5:30 P.M. FOR<br />503 C SFAN TO OPERATE.<br />502 C<br />510 IF(TIME.GE.6:45.AND.TIME.LE.17:30)THEN<br />ON(SFAN)ELSE OFF(SFAN)"
		},

	"TOD": {
			"function": "TOD(mode,recomd,time1,time2,pt1,...,pt12)",
			"description": "This command changes digital output points ON and OFF based on the day of the week and the time of day. If the mode number in the TOD command matches the mode number in the TODMOD command, then TOD commands the particular output points ON and OFF at the specified times.",
			"example": "10 TOD(1,1,17:00,07:00,OLITE1,OLITE2)"
		},

	"TODMOD": {
			"function": "TODMOD(Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday)",
			"description": "This command defines specific modes (normal, weekend, etc.) for each day of the week. The mode assigned to a specific day of the week is then used in conjunction with the TOD and TODSET commands to command points on that day. The values for the Mode are as follows:",
			"example": "110 TODMOD(1,1,1,1,2,4,8)"
		},

	"TODSET": {
			"function": "TODSET(Mode,Recomd,Time 1,Value 1,Time 2,Value 2,Point 1,...,Point 10)",
			"description": "This command is the counterpart of the TOD command for analog points. It commands analog output points based on the day of the week and the time of day. If the mode number in the TODSET command matches the mode number in the TODMOD command, then the TODSET commands the particular output points to Value 1 and Value 2 at the specified times.",
			"example": "550 TODSET(1,1,9:00,72.0,17:00,55.0, SPTEMP)"
		},

	"TOTAL": {
			"function": "TOTAL(pt1)",
			"description": "This function allows you to access the totalized value of a point.",
			"example": "Example 1:<br />800 C<br />801 C THIS LINE COMPARES THE TOTALIZED<br />802 C VALUE OF FAN1 TO DETERMINE IF IT IS<br />803 C GREATER THAN 500. IF THE CONDITION<br />804 C IS TRUE, FAN1 WILL BE PLACED INTO<br />805 C ALARM.<br />806 C<br />810 IF(TOTAL(FAN1).GT.500.0)THEN ALARM(FAN1)<br />Example 2:<br />800 C<br />801 C THIS LINE ASSIGNS THE TOTALIZED<br />802 C VALUE OF FAN1 TO THE POINT CALLED<br />803 C FANRUN.<br />804 C<br />810 FANRUN = TOTAL(FAN1)"
		},

	"WAIT": {
			"function": "WAIT(Time Delay,Point 1,Point 2,Mode)",
			"description": "Used to turn a point ON or OFF based on the trigger point switching ON or OFF. Selection of trigger/result action is based on the value of a mode point.",
			"example": "70 C EXAMPLE OF A WAIT COMMAND IN LOGICAL<br />71 C FIRMWARE. WHEN CNPUMP IS TURNED ON,<br />72 C THE FIELD PANEL WAITS 60 SECONDS<br />74 C BEFORE TURNING CHPUMP ON.<br />75 WAIT(60,CNPUMP,CHPUMP,11)"
		}
}
